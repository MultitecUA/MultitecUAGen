@model MultitecUAGenNHibernate.EN.MultitecUA.ProyectoEN

@{
    ViewBag.Title = "Crear";
}

<h2>Crear Proyecto</h2>
<br />
<p class="text-center">
    <label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@Html.ActionLink("Todos los Proyectos", "ProyectosPresentados")</label><span> >> </span><label>@ViewBag.Title</label>
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @{ if (ViewData.ContainsKey("proyectovacio"))
            {
                <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> No pueden haber campos vacios</p>
                <br />
            }
            else if (ViewData.ContainsKey("error"))
            {
                <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["error"]</p>
            }
            else
            {
                <br /><br />
            }
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @{ if (ViewData.ContainsKey("nombreproyecto"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> El nombre de este evento ya existe</p>
                    }
                    else if (ViewData.ContainsKey("fomatonombreproyecto"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> De 4 a 30 caracteres. Letras, números y espacios.</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Descripcion", new { @class = "form-control" })
                @{ if (ViewData.ContainsKey("formatodescripproyecto"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> De 5 a 200 caracteres.</p>

                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
