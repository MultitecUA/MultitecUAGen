@model MultitecUAGenNHibernate.EN.MultitecUA.NoticiaEN

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Noticia: @ViewData["titulo"]</h2>

<p class="text-center">
    <label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@Html.ActionLink("Noticias", "Index")</label><span> >> </span><label>@ViewBag.Title</label>
</p>

@using (Html.BeginForm("Edit", "Noticia", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
			@{ if (ViewData.ContainsKey("formatotitulonoticia"))
				{
					<p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> De 5 a 50 caracteres. Letras, números y espacios.</p>
				}
			}
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Cuerpo, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Cuerpo, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Cuerpo, "", new { @class = "text-danger" })
			@{ if (ViewData.ContainsKey("formatocuerponoticia"))
				{
					<p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> El cuerpo debe ser de 10 a 4000 caracteres.</p>
				}
			}
		</div>
	</div>

	<div class="form-group">
		@Html.Label("Foto actual", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div style="display: none;">
				@Html.EditorFor(model => model.FotoNoticia, new { htmlAttributes = new { @class = ".d-none" } })
			</div>
			@Html.DisplayTextFor(model => model.FotoNoticia)
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.FotoNoticia, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<input class=" text-box single-line" id="fotoNoticia" name="fotoNoticia" type="file" value="" accept="image/*" />
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Guardar" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
