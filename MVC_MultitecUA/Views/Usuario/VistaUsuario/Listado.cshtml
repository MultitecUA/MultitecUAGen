@model IEnumerable<MultitecUAGenNHibernate.EN.MultitecUA.UsuarioEN>

@{
    ViewBag.Title = "Listado de Usuarios";
}

<h2>Listado de miembros de la Asociación</h2>
<p class="text-center">
	<label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@ViewBag.Title</label>
</p>
<p>
    <h3>Filtros:</h3>
    @using (Html.BeginForm("ForNick", "Usuario"))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group form-inline">
                <div class="col-md-10">
                    <label for="nick">Nick:&nbsp;&nbsp;&nbsp;</label><input class="form-control" type="text" name="nick" />
                    &nbsp;&nbsp;<input type="submit" value="Filtrar por Nick" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @using (Html.BeginForm("ForRol", "Usuario"))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group form-inline">
                <div class="col-md-10">
                    <label for="rol">Rol:&nbsp;&nbsp;&nbsp;&nbsp;</label>
                    @Html.DropDownList("rol", new SelectList((System.Collections.IEnumerable)ViewData["listaRoles"]), new { @class = "form-control" })
                    &nbsp;&nbsp;<input type="submit" value="Filtrar por Rol" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @using (Html.BeginForm("ForCategoria", "Usuario"))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group form-inline">
                <div class="col-md-10">
                    <label for="categoria">Categoría:&nbsp;&nbsp;&nbsp;&nbsp;</label>
                    @Html.DropDownList("categoria", new SelectList((System.Collections.IEnumerable)ViewData["listaCategoriasUsuarios"]), new { @class = "form-control" })
                    &nbsp;&nbsp;<input type="submit" value="Filtrar por Categoría" class="btn btn-default" />
                </div>
            </div>
        </div>
    }    
</p>
<table class="table table-hover text-center">
    <thead style="background-color: gainsboro;">
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.FechaAlta)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Nick)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Rol)
            </th>
            <th class="text-center">
                Proyectos en los que participa
            </th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        
        <tbody onclick="window.location='/Usuario/Detalles?nick='+@item.Nick" style="cursor:pointer;">

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaAlta)
                </td>
                <td>
                    @Html.ActionLink(item.Nick, "Detalles", new { nick = item.Nick })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rol)
                </td>
                <td>
                    @Html.ActionLink("Proyectos", "MisProyectos", "Proyecto", new { nick = item.Nick }, null)
                </td>
            </tr>
        </tbody>
        }


    </table>

@{
	/* La página que me llega del controlador es una unidad menos de lo que muestro por pantalla (la 0 es la 1) */
	var siguiente = (int)ViewData["pag"] + 1;
	var anterior = siguiente - 2;
	var numPags = (int)ViewData["numeroPaginas"] + 1;
}
<p class="text-center">
	@{
		if (siguiente > 1)
		{
			<label>@Html.ActionLink("Primera", "Index", new { pag = 0 })</label>
			<span>|</span>
			<label>@Html.ActionLink("Anterior", "Index", new { pag = anterior })</label>
		}
		else
		{
			<span>Primera</span>
			<span>|</span>
			<span>Anterior</span>
		}
	}

	<span>|</span>
	<label>Página @siguiente de @numPags</label>
	<span>|</span>

	@{
		if (siguiente < numPags)
		{
			<label>@Html.ActionLink("Siguiente", "Index", new { pag = siguiente })</label>
			<span>|</span>
			<label>@Html.ActionLink("Última", "Index", new { pag = numPags - 1 })</label>
		}
		else
		{
			<span>Siguiente</span>
			<span>|</span>
			<span>Última</span>
		}
	}
</p>

<p>
    @Html.ActionLink("Inicio", "../", "", new { @class = "btn btn-primary" })
</p>