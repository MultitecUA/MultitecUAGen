@model MultitecUAGenNHibernate.EN.MultitecUA.UsuarioEN

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Usuario: @ViewData["usuario"]</h2>

<p class="text-center">
    <label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@Html.ActionLink("Usuarios", "Index")</label><span> >> </span><label>@ViewBag.Title</label>
</p>

@using (Html.BeginForm("Edit", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @{ if (ViewData.ContainsKey("CamposVacios"))
            {
                <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["CamposVacios"]</p>
            }
            else if (ViewData.ContainsKey("error"))
            {
                <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["error"]</p>
            }
            else
            {
                <br />
            }
        }

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @{ if (ViewData.ContainsKey("FormatoNombreUsuario"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> Hasta 50 caracteres. Solo letras y espacios.</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @{ if (ViewData.ContainsKey("FormatoContrasenaUsuario"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["FormatoContrasenaUsuario"]</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    <input class=" text-box single-line" id="file" name="file" type="file" value="" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @{ if (ViewData.ContainsKey("FormatoEmailUsuario"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["FormatoEmailUsuario"]</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nick, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nick, new { htmlAttributes = new { @class = "form-control" } })
                @{ if (ViewData.ContainsKey("FormatoNickUsuario"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @ViewData["FormatoNickUsuario"]</p>
                    }
                    else if (ViewData.ContainsKey("NickExiste"))
                    {
                        <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span>  @ViewData["NickExiste"]</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
