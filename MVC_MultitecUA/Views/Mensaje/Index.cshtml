@model IEnumerable<MVC_MultitecUA.Models.MensajeModel>

@{
	ViewBag.Title = "Mensajes";
}

<h2>Mensajes</h2>
<p class="text-center">
	<label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@ViewBag.Title</label>
</p>
<p>
	<h3>Filtros:</h3>

	@using (Html.BeginForm("FiltroAutorReceptor", "Mensaje"))
	{
		<div class="form-horizontal">
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				<div class="col-md-10">

					<label for="titulo">Título del mensaje: </label><input class="form-control" type="text" name="titulo" />
					<label for="nickAutor">Nick del autor: </label><input class="form-control" type="text" name="nickAutor" />
					<label for="nickReceptor">Nick del receptor: </label><input class="form-control" type="text" name="nickReceptor" />
					<label for="EstadoLectura">Estado del mensaje: </label>
					@Html.DropDownList("EstadoLectura", new SelectList((System.Collections.IEnumerable)ViewData["listaEstados"]), new { @class = "form-control" })
					<input type="submit" value="Filtrar" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
</p>
<p>
	@Html.ActionLink("Nuevo Mensaje", "Create")
</p>
@{
	if (TempData["mal"] != null)
	{
		<p class="text-danger"><span class="glyphicon glyphicon-remove"></span> @TempData["mal"] </p>
		TempData.Remove("mal");
	}
	else
	if (TempData["bien"] != null)
	{
		<p class="text-success"><span class="glyphicon glyphicon-check"></span> @TempData["bien"] </p>
		TempData.Remove("bien");
	}
	else
	if (TempData["regular"] != null)
	{
		<p class="text-warning"><span class="glyphicon glyphicon-check"></span> @TempData["regular"] </p>
		TempData.Remove("regular");
	}
}

<table class="table">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.Id)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Titulo)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Cuerpo)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.NickAutor)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.BandejaAutor)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.NickReceptor)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.BandejaReceptor)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.EstadoLectura)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Fecha)
		</th>
		<th>
			Acciones
		</th>
	</tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.Id)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Titulo)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Cuerpo)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.NickAutor)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.BandejaAutor)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.NickReceptor)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.BandejaReceptor)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.EstadoLectura)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Fecha)
			</td>
			<td>
				@Html.ActionLink("Detalles", "Details", new { id = item.Id }) |
				@Html.ActionLink("Borrar", "Delete", new { id = item.Id }) |
				@Html.ActionLink("Cambiar estado lectura", "Edit", new { id = item.Id }) |
				@Html.ActionLink("Cambiar bandeja de autor", "EditAutor", new { id = item.Id }) |
				@Html.ActionLink("Cambiar bandeja de receptor", "EditReceptor", new { id = item.Id })
			</td>
		</tr>
	}

</table>

@{
	/* La página que me llega del controlador es una unidad menos de lo que muestro por pantalla (la 0 es la 1) */
	var siguiente = (int)ViewData["pag"] + 1;
	var anterior = siguiente - 2;
	var numPags = (int)ViewData["numeroPaginas"] + 1;
}
<p class="text-center">
	@{
		if (siguiente > 1)
		{
			<label>@Html.ActionLink("Primera", "Index", new { pag = 0 })</label>
			<span>|</span>
			<label>@Html.ActionLink("Anterior", "Index", new { pag = anterior })</label>
		}
		else
		{
			<span>Primera</span>
			<span>|</span>
			<span>Anterior</span>
		}
	}

	<span>|</span>
	<label>Página @siguiente de @numPags</label>
	<span>|</span>

	@{
		if (siguiente < numPags)
		{
			<label>@Html.ActionLink("Siguiente", "Index", new { pag = siguiente })</label>
			<span>|</span>
			<label>@Html.ActionLink("Última", "Index", new { pag = numPags - 1 })</label>
		}
		else
		{
			<span>Siguiente</span>
			<span>|</span>
			<span>Última</span>
		}
	}
</p>