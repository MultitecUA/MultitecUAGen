@model MVC_MultitecUA.Models.Recuerdo

@{
    ViewBag.Title = "CrearRecuerdo";
}

<h2>Crear recuerdo del evento: @ViewData["NombreEvento"]</h2>
<br />
<p class="text-center">
    <label>@Html.ActionLink("Inicio", "Index", "Home")</label><span> >> </span><label>@Html.ActionLink("Eventos", "TodosEventos", "Evento") / @Html.ActionLink("Mis eventos", "MisEventos", "Evento")</label><span> >> </span><label><a href="../Evento/Detalles/@ViewData["idevento"]">Detalles del evento</a></label><span> >> </span><label><a href="../Recuerdo/porEvento?idEvento=@ViewData["idevento"]">Recuerdos del evento</a></label><span> >> </span><label>@ViewBag.Title</label>
</p>


@using (Html.BeginForm("Create","Recuerdo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @{ if (TempData.ContainsKey("vaciorecuerdo"))
        {
            <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @TempData["vaciorecuerdo"]</p>
            TempData.Remove("vaciorecuerdo");
        }
        else if (TempData.ContainsKey("error"))
        {
            <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> @TempData["error"]</p>
            TempData.Remove("error");
        }
        else
        {
            <br />
        }
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @{  if (TempData.ContainsKey("formatotitulo"))
                {
                    <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> De 4 a 30 caracteres. Letras, números y espacios.</p>
                    TempData.Remove("formatotitulo");
                }
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cuerpo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cuerpo, new { htmlAttributes = new { @class = "form-control" } })
            @{ if (TempData.ContainsKey("formatocuerpo"))
                {
                    <p class="text-danger" style="margin-left: 1em;"><span class="glyphicon glyphicon-remove"></span> De 10 a 200 caracteres.</p>
                    TempData.Remove("formatocuerpo");
                }
            }
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="file">Foto: </label>
        <div class="col-md-10">
            <input class=" text-box single-line" id="file" name="file" type="file" value="" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver a la lista de recuerdos", "porEvento", "Recuerdo", new { idEvento = ViewData["idEvento"] }, null)
</div>
