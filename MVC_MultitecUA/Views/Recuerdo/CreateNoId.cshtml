@model MVC_MultitecUA.Models.Recuerdo

@{
    ViewBag.Title = "Crear Recuerdo";
}

<h2>Crear Recuerdo</h2>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cuerpo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Cuerpo", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cuerpo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdEvento, new { htmlAttributes = new { @class = "form-control" } })
                @{
                    if (TempData.ContainsKey("nocreado"))
                    {
                        <p class="text-danger"><!--<span class="glyphicon glyphicon-remove-sign"></span>-->La ID del evento no existe</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
